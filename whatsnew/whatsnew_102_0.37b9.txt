0.37b9 2000/11/06 [#102 - Nicola Salmoria]
------------------------------------------
A handful of drivers haven't been converted to the new memory API yet, and therefore don't work. On startup, they will give the error cpu # uses wrong data width memory handlers and refuse to start.


New games supported
-------------------
(aburner2) After Burner II [Phil Stroffolino, Dave]
(asuka)    Asuka & Asuka (Japan) [David Graves, Brian Troha]
(atehate)  Athena no Hatena ? [Luca Elia]
(ballbros) Balloon Brothers [Yochizo]
(batrider) Armed Police Batrider (Japan, version B) [Yochizo]
(battleg)  Battle Garegga (Japan) [Yochizo]
(bloxeed)  Bloxeed [David Haywood, Aaron Giles]
(borench)  Borench [David Haywood, Aaron Giles]
(btlkrodj) Battle K-Road (Japan) [Luca Elia]
(cadash)   Cadash (World) [David Graves]
(cavelon)  Cavelon [Paul Swan]
(columns)  Columns (US) [David Haywood, Aaron Giles]
(columns2) Columns II - The Voyage Through Time (Japan) [David Haywood, Aaron Giles]
(daisenpu) Daisenpu (Japan) [Yochizo]
(earthjkr) U.N. Defense Force: Earth Joker (Japan) [David Graves, Brian Troha]
(eightfrc) Eight Forces [Luca Elia]
(eto)      Kokontouzai Eto Monogatari (Japan) [David Graves, Brian Troha]
(flstory)  The FairyLand Story [Nicola Salmoria]
(galmedes) Galmedes (Japan) [David Graves, Brian Troha]
(gigandes) Gigandes [Yochizo]
(harddriv) Hard Drivin' [Aaron Giles, Ernesto Corvi]
(ichidant) Ichidant-R (Puzzle & Action 2) (Japan) [David Haywood, Aaron Giles]
(kiwame)   Pro Mahjong Kiwame [Luca Elia]
(krzybowl) Krazy Bowl [Luca Elia]
(m660)     Mission 660 [Paul Swan]
(mk2)      Mortal Kombat II (rev L4.2) [Mike Greve]
(mofflott) Maze of Flott (Japan) [David Graves, Brian Troha]
(naname)   Naname de Magic! (Japan) [Nicola Salmoria]
(oisipuzl) Oishii Puzzle Ha Irimasenka [Luca Elia]
(pc_bstar) PlayChoice-10: Baseball Stars [Ernesto Corvi]
(potopoto) Poto Poto (Japan) [David Haywood, Aaron Giles]
(puyopuy2) Puyo Puyo 2 (Japan) [David Haywood, Aaron Giles]
(puyopuyo) Puyo Puyo (Japan) [David Haywood, Aaron Giles]
(rezon)    Rezon [Luca Elia]
(ridhero)  Riding Hero (set 1) [Nicola Salmoria]
(sabotenb) Saboten Bombers [Mirko Buffoni]
(scudhamm) Scud Hammer [Luca Elia]
(stkclmns) Stack Columns (Japan) [David Haywood, Aaron Giles]
(tantr)    Tant-R (Puzzle & Action) (Japan) [David Haywood, Aaron Giles]
(tfrceac)  ThunderForce AC [David Haywood, Aaron Giles]
(thunderl) Thunder & Lightning [Luca Elia]
(zunkyou)  Zunzunkyou No Yabou (Japan) [David Haywood, Aaron Giles]

New clones supported
--------------------
(aburner)  After Burner (Japan) [Phil Stroffolino, Dave]
(alphaxz)  Alphax Z [Paul Swan]
(batridra) Armed Police Batrider (Japan, version A) [Yochizo]
(bloxeedc) Bloxeed (C System) [David Haywood, Aaron Giles]
(cadashf)  Cadash (France) [David Graves]
(cadashi)  Cadash (Italy) [David Graves]
(cadashj)  Cadash (Japan) [David Graves]
(cadashu)  Cadash (US) [David Graves]
(columnsj) Columns (Japan) [David Haywood, Aaron Giles]
(flstoryj) The FairyLand Story (Japan) [Nicola Salmoria]
(ichidnte) Ichidant-R (Puzzle & Action 2) (English) [David Haywood, Aaron Giles]
(kodu)     The King of Dragons (US) [Nicola Salmoria]
(m660b)    Mission 660 (bootleg) [Paul Swan]
(manhatan) Manhattan 24 Bunsyo (Japan) [Nicola Salmoria]
(mkr4)     Mortal Kombat (rev 4.0 T-Unit 02/11/93) [Mike Greve]
(natodefa) NATO Defense (alternate mazes) [Nicola Salmoria]
(puyopuya) Puyo Puyo (Japan) (Rev A) [David Haywood, Aaron Giles]
(rainbowa) Rainbow Islands (set 2) [Nicola Salmoria]
(ridheroh) Riding Hero (set 2) [Nicola Salmoria]
(streetsw) Street Smart (World version 1) [Nicola Salmoria]
(tantrbl)  Tant-R (Puzzle & Action) (Japan) (Bootleg) [David Haywood, Aaron Giles]
(tfrceacb) ThunderForce AC (Bootleg) [David Haywood, Aaron Giles]
(tfrceacj) ThunderForce AC (Japan) [David Haywood, Aaron Giles]
(twotigra) Two Tigers (dedicated) [Craig Aker]


These drivers have improved GRAPHICS:
-------------------------------------
- Fixed last two levels in 'Act Fancer' [Bryan McPhail].


Source changes:
----------------
- Major rewrite of the memory interface [Aaron Giles]:
  * The interface to the system is nearly identical, but the core has been rewritten. Input ports are now handled just like memory accesses. Input ports are also the same width as memory for a given CPU. For example, a 16-bit CPU now needs both 16-bit memory handlers and 16-bit port handlers. Interfaces for 16-bit and 32-bit port handlers have been added. New macros exist now for generating and declaring a set of memory handlers. This makes it very easy to add a new address space. The "voodoo constants" ABITS1_xx, ABITS2_xx and ABITSMIN_xx are no longer necessary. The number of supported banks has been expanded to 24. The memory_set_bankhandler_* functions now take an additional parameter which serves as an additional offset into the memory space. The namcos1 driver has been modified to take advantage of these features. It is now possible to manually limit the number of active address bits by using a special MEMPORT_SET_BITS() macro in the read or write memory definitions. See the rpunch driver for an example (Rabio Lepus only maps the low 20 bits of the 68000's 24-bit address space.) A new function cpu_get_pc_byte returns the byte offset of the current CPU's PC, adjusted for Harvard architecture CPUs and CPUs which track the PC at the bit or word level. Several functions and macros have been renamed. All drivers have been updated accordingly:

  cpu_setbankhandler_*  -> memory_set_bankhandler_*
  cpu_setOPbaseoverride -> memory_set_opbase_handler
  memoryswapcontext     -> memory_set_context
  cpu_readport          -> cpu_readport16
  cpu_writeport         -> cpu_writeport16
  change_pc             -> changepc_16

- Major rewrite of the ROM loading interface. The previous ROM loading system was showing its limitations, and was often the source of confusion about byte ordering. The new system attempts to address these concerns. All drivers have been converted to use the new system exclusively; the old macros are deprecated immediately. The ROM_REGION macro now takes a third parameter, which holds the various flags for the region. These flags have been expanded to describe the data width and endianness of the region (except for CPU regions, which obtain their width and endianness from the associated CPU). This information is used after the region has been loaded in order to appropriately byte-swap the data for the native endianness of the target platform. Additional region flags are now provided: ROMREGION_INVERT performs a logical NOT on all data in the region. And ROMREGION_ERASE can be used to clear the region to a specific byte value before loading ROMs. For ROM loading, the old collection of ROM_LOAD_XXX_EVEN/ODD macros is gone. To load a ROM into every other byte in a region, use the new macro ROM_LOAD16_BYTE. All data should now be loaded in the natural alignment and endianness of the region. Only after the ROMs are loaded will the data be modified to correspond to what the CPU needs. If you are loading data for a CPU into a non-CPU region (for example, you are loading 68000 code into REGION_USER1), you need to make sure to tag the region the same as the CPU. For a user region containing 68000 code, you should use the ROM_REGION16_BE() macro to declare the region. This isn't necessary for REGION_CPUxx because the ROM loader automatically determines the information it needs from the CPU interface. If you have old drivers to convert, these conversions cover 99% of all cases (the (0) or (1) indicates that the offset field should be an even (0) or an odd (1) address):

  ROM_LOAD_EVEN         -> ROM_LOAD16_BYTE(0)
  ROM_LOAD_ODD          -> ROM_LOAD16_BYTE(1)
  ROM_LOAD_WIDE         -> ROM_LOAD16_WORD
  ROM_LOAD_WIDE_SWAP    -> ROM_LOAD16_WORD_SWAP

  ROM_LOAD_GFX_EVEN     -> ROM_LOAD16_BYTE(0)
  ROM_LOAD_GFX_ODD      -> ROM_LOAD16_BYTE(1)
  ROM_LOAD_GFX_SWAP     -> ROM_LOAD16_WORD_SWAP

  ROM_LOAD_V20_EVEN     -> ROM_LOAD16_BYTE(1)
  ROM_LOAD_V20_ODD      -> ROM_LOAD16_BYTE(0)
  ROM_LOAD_V20_WIDE     -> ROM_LOAD16_WORD

- These new macros are built upon a more flexible collection of ROM-loading operations. ROM data is now loaded in "groups" of 1-16 bytes, with 0-15 bytes of empty space left between each group. The data in each group can be loaded in standard order, or in reversed order. And each byte of data loaded can be masked and shifted to blend with other data that has been previously loaded. Furthermore, since almost every ROM_RELOAD and ROM_CONTINUE was used to load the ROM with the exact same parameters, these macros now inherit the behavior of the previous operation. This eliminates the need for ROM_RELOAD_GFX_EVEN and all the other macros that cluttered up the old system. For example, if you use ROM_LOAD16_BYTE to load some data, and follow it with a ROM_CONTINUE to load additional data at a separate offset, the ROM loader will continue loading every other byte. Finally, there are two new entries that can be used to help fill in unused or duplicated ROM data:

  ROM_FILL( offset, length, byteval)
  ROM_COPY( source_region, source_offset, offset, length )
  
  ROM_FILL simply clears blocks of a region to a specific byte value. ROM_COPY can be used to copy previously-loaded data from the same or another region [Aaron Giles].

- The 68EC020 core now uses 32-bit memory handlers. The Psikyo driver has been updated to use the new interface. Unfortunately, this support has yet to make it into the x86 asm 68000 core, so it is once again disabled for this build [Aaron Giles].
- The CCPU and TMS32C010 cores are now full 16-bit cores. Appropriate changes to the drivers that use them have already been made. This fixes the input ports on the Cinematronics games, and gameplay in several Toaplan games [Aaron Giles].